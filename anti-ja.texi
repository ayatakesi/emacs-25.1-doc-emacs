@c ===========================================================================
@c
@c This file was generated with po4a. Translate the source file.
@c
@c ===========================================================================
@c -*- coding: utf-8 -*-
@c This is part of the Emacs manual.
@c Copyright (C) 2005-2016 Free Software Foundation, Inc.
@c See file emacs.texi for copying conditions.

@node Antinews
@appendix Emacs 24 アンチニュース
@c Update the emacs.texi Antinews menu entry with the above version number.

  時代に逆らって生きるユーザーのために、以下はEmacsバージョン24.5へのダウングレードに関する情報です。Emacs
@value{EMACSVER}機能の不在による結果としての偉大なる単純さを、ぜひ堪能してください。

@itemize @bullet
@item
Cairoによる描画サポートは削除されました。今やGNUおよびUnixシステムでは、ただ1つの描画エンジン ---
伝統あるXウィンドウシステムだけになります。新しい光り輝くCairoを望むべきか、望まぬべきかというジレンマで思い悩む必要はなくなりました。Hail,
simplicity!(単純さ、万歳!)

@item
依然としてEmacsはSGI
IRIXシステム上で機能します。時代に逆らって生きるあなたにとっては、これはまさにボーナスです。なぜならIRIXシステムは、時代を遡れば遡るほど、ますますポピュラーになっていくのですから。

@item
動的にロードされるモジュールにたいするサポートは削除されました。これで何の追加もなしに、信頼できるEmacsコードベースだけを使用できます。どこかのJ.R.
Hackerとやらによって記述されたような外部もジュールは、どちらにせよ信頼できませんから。いい厄介払いですね!

@item
Network Security
Managerの削除により、わたしたちはネットワークにアクセスするEmacs機能を劇的に単純化しました。このページが信用できるか、あのページは信頼できるかなどの、煩わしい質問はもはや存在しません　---　あなた求める。あなた得る。質問なんてありません!
今では、認証が期限切れとか、最初の場所にない等の、サイトに関するセキュリティー問題は、ユーザー、つまりあなたに責任があります。ユーザーに最大限の自由を与えるのは、常にEmacs開発におけるもっとも重要なゴールでしょう。時代に逆らったEmacs開発においても、わたしたちはこのゴールを維持します。

@item
わたしたちは、@kbd{C-h
l}の出力から、記録されたキーストロークにより実行されるコマンド名を削除することにより、出力を理解するのを単純かつ簡単にしました。いずれにせよ、真にEmacsを愛するものは、バインディングなどハートで知るのです。なぜ既に判っているものの表示のために、貴重なスクリーン資源を無駄にしなければならないのでしょう?

@item
選択機能およびクリップボードに関するコマンドと変数は、伝統的な名前に戻りました。今や、あいまいな@code{select-enable-clipboard}のかわりに、信頼できる@code{x-select-enable-clipboard}という名前に戻り、@code{gui-select-text}、@code{gui-get-primary-selection}などはすべて@code{x-*}という名前に戻りました(ところで、``GUI''って何ですか?)。選択機能をもつ真のウィンドウシステムはXウィンドウシステムだけなので、他のプラットフォームにもXのようなものがあるなどと偽るのは止めました。これであなたはコマンドを呼び出すとき、それがXにアクセスするか知ることができます。

@item
@code{-batch}モードでタイプされたパスワードは、隠されなくなりました。開始したときは明らかではありませんでしたが、これは誤った機能でした
--- タイプしたものを見ずにタイプできる人などいますか?
GUIセッションのユーザーにパスワードの非表示を諦めるよう説得はできなかったので、せめてバッチモード(これはすべてのEmacsベテランユーザーがいつも使用するモードです)ではパスワードを表示させます。以前のEmacsバージョンへの進行的なダウングレードと同様、GUIセッションでのパスワードの表示については、引き続き注目していてください。

@item
至る所にひょっこり現れるUnicode文字に関する厄介事には、充分な処置がされました。『‘』、『 ’』、『 “』、『
”』、『€』、『≤』などの文字、およびその他多くの文字にたいする、@kbd{C-x
8}による省略入力を、わたしたちは削除しました。これによりもたらされた素晴らしい恩恵として、@kbd{C-h
b}の出力の先頭にある、使い道のない多くのエントリーが削除されました。@code{electric-quote-mode}は削除されたので、これからは唯一正しいクォーティング手法
--- つまりプレーン@acronym{ASCII}のクォート文字だけとなります。これで充分でない場合は、@t{‘like
this’}のようにUnicodeの``curved quote''で勝手に置換されるかわりに、ドキュメント文字列や他のメッセージは@t{`like
this'}のようにテキストをクォートして記述されています。したがって@code{text-quoting-style}は不要となり、削除されました。結果としてEmacsで生成されたテキストは、再び伝統的なテレタイプで送れるようになりました。yeah!

同じ理由により、文字クラス@code{[:alpha:]}、@code{[:alnum:]}は、単語構成文字にマッチし、@code{[:graph:]}、@code{[:print:]}はすべてのマルチバイト文字にマッチするように戻りました。Unicode文字の使用による混乱は去ったのです。

@item
インクリメンタル検索(I-search)、および問い合わせつき置換(query-replace)が、``character-folding''マジックの使用によりあなたを混乱させることは、もはやありません。実際は@kbd{a}とタイプしたのに@kbd{ⓐ}を検索するような、実際にはタイプしていない文字を検索することはなくなりました。何かfancy
characterを探したいユーザーは、それを明示的にタイプする必要があるでしょう。

@item
もはや@file{desktop.el}パッケージはウィンドウやフレームの設定を記録せず、それらの復元も試みません。これで、セッションを復元するときに、新たにウィンドウやフレームを再配置する自由が、あなたに戻りました。これによる、@file{.emacs.desktop}形式にたいする新たな後方非互換は不要なので、ファイル形式はEmacs
25以前の形式に戻されました。これで再び、Emacsのすべての以前のバージョンで、desktopファイルを使用できるようになりました。

@item
わたしたちはPrettify
Symbolsモードが、デフォルトの@code{prettify-symbols-compose-predicate}だけをサポートするように書き直しました。あなたのメジャーモード(またはマイナーモード)が、独自のprettificationをもつかどうか考慮する必要はなくなりました。Emacs由来のものだけを使用してください。わたしたちは@code{prettify-symbols-unprettify-at-point}オプションも削除しました。1度prettifyされたら、常にprettifyされるのです!
これらの変更によりPrettify Symbolsモードの使用は桁外れに単純で簡単になりました。

@item
xtermの素敵な新しい機能(X選択やクリップボードへのアクセス、``bracketed paste
mode''、その他の進化した機能)にたいするサポートは削除されました。xterm上のEmacsでテキストをkillしたとき、他のアプリケーションがそれにアクセスする方法をもたないように、Emacsのkillリングだけにそのテキストが保存されます。xtermは単なるテキスト端末。それだけのことです。最低限のコンソール端末ではサポートされていないのに、xtermではサポートされるような機能は存在すべきではないのです。同じ理由により、xtermでのマウストラッキングにたいするサポートも削除されました。Emacsの以前のバージョンへのダウングレードと同様、わたしたちはこの一連の単純化を継続していくので、注目していてください。

@item
@file{package.el}のさまざまな機能が単純化されました。``外部(external)''パッケージの状態は、もはや利用可能ではありません。これからは複数のアーカイブから提供されるパッケージは、それが見つかる度にリストされます。わたしたちは、どんな情報でも、ユーザーから隠すことを正しいとは思いません。この変更、およびその他の似たような単純化により、隠すものが存在しなくなったので、@code{package-menu-toggle-hiding}は必要なくなりました。

@item
ミニバッファーでの@kbd{@key{UP}}(または@kbd{@key{DOWN}})キーは、ヒストリー内でアイテム間を移動するように単純化されました。前(または次)のアイテムに移動するのか、それとも同じアイテムの別の行に移動するのか悩む必要はなくなりました。どちらにせよ、うまく記述されたコマンドは、長すぎるヒストリーエントリーを許容すべきではないのです。そうすれば、わたしたちは以前のバージョンのEmacsでそれをfixできるように、長すぎるヒストリーエントリーをバグとして報告してください。

@item
``push''コマンドのサポートを削除することにより、VCモードは単純化されました。時代を遡るとは、Git、Bazaar、Mercurialなどの現代的なバージョンコントロールシステムを使う必要性が少なくなることを意味するので、``push''コマンドを使う必要性も次第に消滅するでしょう。わたしたちは事前にこれをEmacsから削除しておいたので、このコマンドが消滅したとき、それを忘れるために学習しなおす必要もないでしょう。

@item
マクロでのC/C++式にたいする完全なサポートは、Hide-Ifdefモードから削除され、これからは基本的なリテラルマクロだけがサポートされます。結果としてユーザーインターフェースは単純化され、いくつかの無用なコマンドがHide-Ifdefモードから削除されました。@code{#if
defined}、@code{#elif}などの、新たな変則的なプリプロセッサーディレクティブにたいするサポートの削除により、更なる単純化が可能になりました。

@item
わたしたちは関数や変数などの定義を探すようにEtagsを書き直しました。常に行なわれていたように@kbd{M-.}のようなコマンドはタグテーブルを使用します。これにより@file{xref.el}パッケージ全体の削除と、その他のEmacsパッケージやコマンドの中の多くの転移が可能になり、それらは著しく単純化されました。もはや、一貫しない説明や記憶するのが困難な振る舞いを提供するさまざまな``backends''に由来する複雑さはありません。シンボルがTAGSにあるか、ないのか、それだけです。もはや以前にEmacsで見たことがない新たなユーザーインターフェースはありません。タイプしたシンボルにたいする次の定義が欲しいときは、@kbd{C-u
M-.}を呼び出すだけです。シンプルでしょう?
素晴らしい副次的影響として、あなたの最愛のコマンド@code{tags-loop-continue}、@code{pop-tag-mark}と、覚えやすいバインディングを使用できます。同様の理由により@file{package.el}パッケージが削除されました。

@item
@code{(/ @var{n})}は再び@var{n}となります。Emacs LispはCommon
Lispではないので、CLにたいする互換性はEmacsを複雑にするだけです。

@item
関数@code{filepos-to-bufferpos}および@code{bufferpos-to-filepos}は削除されました。バッファー内の位置からファイル内での位置を探したり、その逆を行なう必要があるコードは、変換なしでファイルを読んで、テキストを比較しながらバイトを数えるべきです。それほど難しいことですか?

@item
@code{make-process}プリミティブにたいする必要性が見つからなかったので、それを削除しました。@code{start-process}プリミティブは必要なすべての機能を提供するので、さらにAPIを追加するのはユーザーを混乱させるだけです。

@item
Emacs
23へのダウングレードにおける双方向テキストサポート全体の削除に備えるため、関数@code{bidi-find-overridden-directionality}および@code{buffer-substring-with-bidi-context}が削除されました。

@item
もはや水平スクロールバーはサポートされません。かわりにウィンドウやフレームを拡大するか、@code{truncate-lines}と遠い昔からEmacsがもっている、テキストの自動的な水平スクロールを使用してください。

@item
Emacsは、フレームメニューとツールバーの高さを、フレームのテキストの高さで計算するようになりました。これにより、異なるプラットフォームや異なるツールキットでのEmacs呼び出しで、コマンドラインでフレームのgeometryパラメーターが与えられた場合に、予測可能性が減少するので、Emacsがより冒険的になり、使うとき退屈しなくなります。

@item
もはや@command{etags}プログラムはRuby言語とGo言語をサポートしません。これらの言語が考案される前まで、時代を遡る必要はなくなるでしょう。その時のために、わたしたちはアプリケーションからそれらにたいするサポートを削除しました。

@item
Emacs 24.5では、コンピューターのメモリー容量とディスク容量を削減して、良好な状態に保つために、その他多くの機能とファイルが削除されました。
@end itemize
